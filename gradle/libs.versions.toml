[versions]
# ======= Kotlin & Related Technologies =======
# Core Kotlin version - provides language features and standard library
kotlin = "2.0.21"
# Kotlin Symbol Processing (KSP) - Kotlin's annotation processing tool
ksp = "2.0.21-1.0.28"
# Coroutines RxJava integration - bridges between Kotlin Coroutines and RxJava
kotlinx-coroutines-rx3 = "1.9.0"
# Official Kotlin JSON serialization - type-safe JSON processing
kotlinx-serialization-json = "1.7.3"
# Ktor - Modern asynchronous HTTP client framework by JetBrains
ktor = "3.0.1"

# ======= Testing Frameworks =======
# JUnit Jupiter - Modern testing framework for Java and Kotlin
junit = "5.10.3"

# ======= Reactive Stack =======
# Kotlin extensions for Project Reactor
reactor-kotlin = "1.2.2"

# ======= Spring Framework Stack =======
# Spring Boot - Core framework for building production-ready applications
springBoot = "3.3.4"
# Spring Dependency Management - Centralized dependency versions for Spring projects
springDependencyManagement = "1.1.6"
# SpringDoc - OpenAPI (Swagger) documentation generator for Spring Boot
springdoc = "2.6.0"

# ======= HTTP & Network Libraries =======
# OkHttp - Efficient HTTP client by Square
okhttp = "4.12.0"
# Retrofit - Type-safe HTTP client for Java/Kotlin
retrofit = "2.11.0"
# RxJava - Reactive Extensions for the JVM
rxjava = "3.1.9"
# RxKotlin - Kotlin extensions for RxJava
rxkotlin = "3.0.1"
# JSoup - HTML parsing and manipulation library
jsoup = "1.17.2"

# ======= JSON Processing =======
# Jackson - Flexible JSON processing library
jackson = "2.18.1"
# JsonPath - XPath-like syntax for JSON document traversal
jsonpath = "2.7.0"

# ======= Logging Infrastructure =======
# Janino - Java compiler for dynamic code generation (used by Logback)
janino = "3.1.12"
# Logback - Reliable logging framework implementation
logback = "1.5.12"
# Logstash Encoder - JSON formatting for logs
logstash_logback_version = "8.0"
# SLF4J - Simple Logging Facade for Java
slf4j = "2.0.16"
# Splunk Logging Library - Integration with Splunk logging infrastructure
splunk_logging = "1.11.8"

# ======= Development Tools =======
# MapStruct - Type-safe bean mapping generation
mapstruct = "1.5.5.Final"
# Spotless - Code formatting enforcement
spotless = "7.0.0.BETA4"

# ======= Utilities =======
# Dotenv - Environment configuration from .env files
dotenv = "5.2.2"

# ======= Quarkus Stack =======
quarkusPluginVersion = "3.23.0"
quarkusPlatformVersion = "3.23.0"

[plugins]
# ======= Kotlin Plugins =======
# JPA support for Kotlin
kotlin-jpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin" }
# Kotlin serialization compiler plugin
kotlin-plugin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
# Enhanced Spring Framework support for Kotlin
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
# Kotlin Symbol Processing plugin
kotlin-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }

# ======= Spring Plugins =======
# Spring Boot application plugin
spring-boot = { id = "org.springframework.boot", version.ref = "springBoot" }
# Spring dependency management
spring-dependency = { id = "io.spring.dependency-management", version.ref = "springDependencyManagement" }

# ======= Code Quality Plugins =======
# Code formatting and style enforcement
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }

# ======= Quarkus Plugin =======
quarkus = { id = "io.quarkus", version.ref = "quarkusPluginVersion" }

[libraries]
# ======= Kotlin Core Libraries =======
# Runtime reflection capabilities
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
# Kotlin Gradle plugin
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
# KSP API for annotation processing
kotlin-ksp-symbol-processing-api = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }

# ======= Testing Libraries =======
# JUnit Jupiter API
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
# JUnit Jupiter Engine
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
# JUnit Jupiter Params for parameterized tests
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit" }

# ======= Reactive Stack =======
# Spring WebFlux starter including Project Reactor
spring-boot-starter-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux", version.ref = "springBoot" }
# Integration between Kotlin Coroutines and Project Reactor
kotlinx-coroutines-reactor = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-reactor", version.ref = "kotlinx-coroutines-rx3" }
# Kotlin-specific extensions for Project Reactor
reactor-kotlin-extensions = { group = "io.projectreactor.kotlin", name = "reactor-kotlin-extensions", version.ref = "reactor-kotlin" }

# ======= Ktor HTTP Client Stack =======
# Coroutine-based I/O implementation
ktor-client-cio = { group = "io.ktor", name = "ktor-client-cio", version.ref = "ktor" }
# Content negotiation support
ktor-client-content-negotiation = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktor" }
# Core client functionality
ktor-client-core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor" }
# Request/response logging
ktor-client-logging = { group = "io.ktor", name = "ktor-client-logging", version.ref = "ktor" }
# OkHttp engine implementation
ktor-client-okhttp = { group = "io.ktor", name = "ktor-client-okhttp", version.ref = "ktor" }

# ======= Kotlin Extensions =======
# RxJava 3 coroutines integration
coroutines-rx3 = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-rx3", version.ref = "kotlinx-coroutines-rx3" }
# JSON serialization
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinx-serialization-json" }

# ======= HTTP & Network Libraries =======
# OkHttp logging capabilities
okhttp-logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
# RxJava core
rxjava = { group = "io.reactivex.rxjava3", name = "rxjava", version.ref = "rxjava" }
# Kotlin-specific RxJava extensions
rxkotlin = { group = "io.reactivex.rxjava3", name = "rxkotlin", version.ref = "rxkotlin" }
# HTML parsing and manipulation library
jsoup = { group = "org.jsoup", name = "jsoup", version.ref = "jsoup" }

# ======= JSON Processing =======
# Jackson core annotations
jackson-annotations = { group = "com.fasterxml.jackson.core", name = "jackson-annotations", version.ref = "jackson" }
# Jackson Kotlin support
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }
# JSON querying support
jsonpath = { group = "com.jayway.jsonpath", name = "json-path", version.ref = "jsonpath" }

# ======= Development Tools =======
# Object mapping framework
mapstruct = { group = "org.mapstruct", name = "mapstruct", version.ref = "mapstruct" }
# MapStruct compiler
mapstruct-processor = { group = "org.mapstruct", name = "mapstruct-processor", version.ref = "mapstruct" }

# ======= Logging Stack =======
# Dynamic code compilation for logging
janino = { group = "org.codehaus.janino", name = "janino", version.ref = "janino" }
# Logging implementation
logback-classic = { group = "ch.qos.logback", name = "logback-classic", version.ref = "logback" }
# JSON log formatting
logstash-logback = { module = "net.logstash.logback:logstash-logback-encoder", version.ref = "logstash_logback_version" }
# Logging facade
slf4j-api = { group = "org.slf4j", name = "slf4j-api", version.ref = "slf4j" }
# Splunk logging integration
splunk-logging = { group = "com.splunk.logging", name = "splunk-library-javalogging", version.ref = "splunk_logging" }

# ======= Documentation =======
# OpenAPI/Swagger UI
springdoc-openapi-starter = { group = "org.springdoc", name = "springdoc-openapi-starter-webmvc-ui", version.ref = "springdoc" }

# ======= Utilities =======
# Environment configuration
dotenv = { group = "io.github.cdimascio", name = "java-dotenv", version.ref = "dotenv" }

# ======= Spring AMQP (RabbitMQ) =======
spring-boot-starter-amqp = { module = "org.springframework.boot:spring-boot-starter-amqp", version.ref = "springBoot" }

# ======= Spring AOP =======
spring-boot-starter-aop = { module = "org.springframework.boot:spring-boot-starter-aop", version.ref = "springBoot" }

# ======= Quarkus Libraries =======
quarkus-bom = { group = "io.quarkus.platform", name = "quarkus-bom", version.ref = "quarkusPlatformVersion" }

[bundles]
# Core Kotlin dependencies
kotlin-core = ["kotlin-reflect", "kotlin-ksp-symbol-processing-api"]

# Testing dependencies
testing = [
    "junit-jupiter",          # JUnit Jupiter API and Engine
    "junit-jupiter-params",   # Support for parameterized tests
]

# Complete logging setup
logging = [
    "slf4j-api", # Logging facade
    "logback-classic", # Logging implementation
    "logstash-logback", # JSON log formatting
    "janino", # Dynamic compilation support
    "splunk-logging", # Splunk logging integration
]

# Comprehensive Ktor HTTP client setup
ktor-http-client = [
    "ktor-client-core", # Base functionality
    "ktor-client-cio", # Coroutine I/O
    "ktor-client-okhttp", # OkHttp engine
    "ktor-client-logging", # Request/response logging
    "ktor-client-content-negotiation", # Content type handling
    "kotlinx-serialization-json", # JSON serialization
    "coroutines-rx3"                     # RxJava integration
]

# Spring dependencies
spring-dependencies = ["spring-boot-starter-amqp","spring-boot-starter-aop"]

# Reactive programming support bundle
reactive = [
    "spring-boot-starter-webflux",      # WebFlux core functionality
    "kotlinx-coroutines-reactor",       # Coroutines-Reactor bridge
    "reactor-kotlin-extensions",        # Kotlin extensions for Reactor
]
